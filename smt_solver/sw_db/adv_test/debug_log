==29645== Memcheck, a memory error detector
==29645== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==29645== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==29645== Command: bplace-debug -aux design.aux -out place.pl
==29645== 
[H[2JError 1: Main::Cannot find aux file design.aux
Copyright (c) 2016, All Right Reserved, UCLA EDA LAB

bruinPlacer 1.0.0 (2016-Jan)
This is a placement program for Xilinx UltraScale FPGA
dP                         oo           888888ba  dP                                    
88                                      88    `8b 88                                    
88d888b. 88d888b. dP    dP dP 88d888b. a88aaaa8P' 88 .d8888b. .d8888b. .d8888b. 88d888b.
88'  `88 88'  `88 88    88 88 88'  `88  88        88 88'  `88 88'  `"" 88ooood8 88'  `88
88.  .88 88       88.  .88 88 88    88  88        88 88.  .88 88.  ... 88.  ... 88      
88Y8888' dP       `88888P' dP dP    dP  dP        dP `88888P8 `88888P' `88888P' dP      

Build time : 2016-03-20 14:04:40
==29645== 
==29645== HEAP SUMMARY:
==29645==     in use at exit: 73,340 bytes in 4 blocks
==29645==   total heap usage: 72 allocs, 68 frees, 76,272 bytes allocated
==29645== 
==29645== 33 bytes in 1 blocks are possibly lost in loss record 1 of 4
==29645==    at 0x4C2B1C7: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==29645==    by 0x4EFF658: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==29645==    by 0x4EFF776: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==29645==    by 0x4F013A5: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==29645==    by 0x409439: main (main.cc:95)
==29645== 
==29645== 35 bytes in 1 blocks are possibly lost in loss record 2 of 4
==29645==    at 0x4C2B1C7: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==29645==    by 0x4EFF658: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==29645==    by 0x4EFF776: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==29645==    by 0x4F013A5: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==29645==    by 0x4093FD: main (main.cc:94)
==29645== 
==29645== 568 bytes in 1 blocks are still reachable in loss record 3 of 4
==29645==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==29645==    by 0x573019A: __fopen_internal (iofopen.c:76)
==29645==    by 0x4602AA: check_init() (log.cc:111)
==29645==    by 0x460184: log_print_error(char const*, unsigned int, char const*, ...) (log.cc:82)
==29645==    by 0x4094E2: main (main.cc:101)
==29645== 
==29645== 72,704 bytes in 1 blocks are still reachable in loss record 4 of 4
==29645==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==29645==    by 0x4EBC60F: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==29645==    by 0x400F305: call_init.part.0 (dl-init.c:85)
==29645==    by 0x400F3DE: _dl_init (dl-init.c:52)
==29645==    by 0x40016E9: ??? (in /lib/x86_64-linux-gnu/ld-2.15.so)
==29645==    by 0x4: ???
==29645==    by 0x7FF00052A: ???
==29645==    by 0x7FF000537: ???
==29645==    by 0x7FF00053C: ???
==29645==    by 0x7FF000547: ???
==29645==    by 0x7FF00054C: ???
==29645== 
==29645== LEAK SUMMARY:
==29645==    definitely lost: 0 bytes in 0 blocks
==29645==    indirectly lost: 0 bytes in 0 blocks
==29645==      possibly lost: 68 bytes in 2 blocks
==29645==    still reachable: 73,272 bytes in 2 blocks
==29645==         suppressed: 0 bytes in 0 blocks
==29645== 
==29645== For counts of detected and suppressed errors, rerun with: -v
==29645== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 2 from 2)
